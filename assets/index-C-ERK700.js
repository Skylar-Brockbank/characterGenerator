var L=Object.defineProperty;var T=(l,e,r)=>e in l?L(l,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):l[e]=r;var g=(l,e,r)=>T(l,typeof e!="symbol"?e+"":e,r);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function r(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function t(i){if(i.ep)return;i.ep=!0;const a=r(i);fetch(i.href,a)}})();const C="modulepreload",E=function(l){return"/characterGenerator/"+l},w={},A=function(e,r,t){let i=Promise.resolve();if(r&&r.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),o=(n==null?void 0:n.nonce)||(n==null?void 0:n.getAttribute("nonce"));i=Promise.allSettled(r.map(d=>{if(d=E(d),d in w)return;w[d]=!0;const h=d.endsWith(".css"),m=h?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${m}`))return;const u=document.createElement("link");if(u.rel=h?"stylesheet":C,h||(u.as="script"),u.crossOrigin="",u.href=d,o&&u.setAttribute("nonce",o),document.head.appendChild(u),h)return new Promise((c,f)=>{u.addEventListener("load",c),u.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${d}`)))})}))}function a(n){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=n,window.dispatchEvent(o),!o.defaultPrevented)throw n}return i.then(n=>{for(const o of n||[])o.status==="rejected"&&a(o.reason);return e().catch(a)})};function R(l={}){const{immediate:e=!1,onNeedRefresh:r,onOfflineReady:t,onRegistered:i,onRegisteredSW:a,onRegisterError:n}=l;let o,d,h;const m=async(c=!0)=>{await d,h==null||h()};async function u(){if("serviceWorker"in navigator){if(o=await A(async()=>{const{Workbox:c}=await import("./workbox-window.prod.es5-B9K5rw8f.js");return{Workbox:c}},[]).then(({Workbox:c})=>new c("/characterGenerator/sw.js",{scope:"/characterGenerator/",type:"classic"})).catch(c=>{n==null||n(c)}),!o)return;h=()=>{o==null||o.messageSkipWaiting()};{let c=!1;const f=()=>{c=!0,o==null||o.addEventListener("controlling",p=>{p.isUpdate&&window.location.reload()}),r==null||r()};o.addEventListener("installed",p=>{typeof p.isUpdate>"u"?typeof p.isExternal<"u"&&p.isExternal?f():!c&&(t==null||t()):p.isUpdate||t==null||t()}),o.addEventListener("waiting",f)}o.register({immediate:e}).then(c=>{a?a("/characterGenerator/sw.js",c):i==null||i(c)}).catch(c=>{n==null||n(c)})}}return d=u(),m}function F(l){const e=l.querySelector("#pwa-toast"),r=e.querySelector(".message #toast-message"),t=e.querySelector("#pwa-close"),i=e.querySelector("#pwa-refresh");let a;const n=()=>a==null?void 0:a(!0);function o(h){if(h){requestAnimationFrame(()=>o(!1));return}e.classList.contains("refresh")&&i.removeEventListener("click",n),e.classList.remove("show","refresh")}function d(h){h||i.addEventListener("click",n),requestAnimationFrame(()=>{o(!1),h||e.classList.add("refresh"),e.classList.add("show")})}window.addEventListener("load",()=>{t.addEventListener("click",()=>o(!0)),a=R({immediate:!0,onOfflineReady(){r.innerHTML="App ready to work offline",d(!0)},onNeedRefresh(){r.innerHTML="New content available, click on reload button to update",d(!1)},onRegisteredSW(h,m){}})})}const y={gender:["Male","Female"],ageRelation:["older","older","older","younger","younger","younger","twin"],startingAge:["5-10","10-15","15-20","20-25","20-25","25-30","25-30","30-35","30-35","35-40","40-45","45-50","50-55","55-60","60+"],characterClasses:["Wizard","Bard","Druid","Warlock","Sorcerer","Cleric","Fighter","Barbarian","Paladin","Ranger","Rogue"],living:["alive","dead","other"]},G={1:"Responds to discomfort by adhearing to the rules. They feel wronged, taken advantage of, or vulnerable and fight back using laws, rules, and regulations.",2:"Responds to low self esteem by taking care of others. They feel that they must have value if they are providing value to others",3:"Responds to low self esteem by pursuing high achievement. They feel like they can't be worthless if they're the best at something",4:"Responds to low self esteem by highlighting their imperfections as a way of reaffirming their individuality",5:"Responds to fear of the world by learning and creating a system of understanding. The world is less scary if you know why things are this way and what is probably coming next",6:"Responds to fear of the world by identifying danger and finding saftey. This character will always make the safe choice even if it means giving up individuality to get saftey in numbers",7:"Responds to fear of the world by distracting themself. Often engages in vice or fixation to tune out all of the uncomfortable stuff",8:"Responds to discomfort by asserting dominance. They are compelled to be stronger than everyone around them because they cant handle feeling vulnerable",9:"Responds to discomfort by convincing themself that their situation is fine or that it is what it is."};class P{constructor(){g(this,"choose",e=>{const r=Math.floor(Math.random()*e.length);return e[r]});g(this,"buildNpc",()=>{const e=t=>({...{Age:this.choose(y.startingAge),Class:this.choose(y.characterClasses),Gender:this.choose(y.gender),Living:this.choose(y.living)},...t}),r={Character:e({Living:"Alive"}),Family:{Parents:[e({Gender:"Male"}),e({Gender:"Female"})],Siblings:[]}};if(this.choose([!0,!0,!1])){let t=this.choose([1,2,3]);for(let i=0;i<t;i++){let a=e();a.Gender=="Male"?a.Gender="brother":a.Gender="sister",a.Age=this.choose(y.ageRelation),r.Family.Siblings.push(a)}}r.Character.Name="",r.Character.Notes="",r.Character.Types=[this.choose([1,8,9]),this.choose([2,3,4]),this.choose([5,6,7])],r.Character.TypeDescriptions=[];for(let t in r.Character.Types)r.Character.TypeDescriptions.push(G[r.Character.Types[t]]);return r})}}class b{constructor(e,r){this.order=r,this.lookupTable={},this.startingFragments=[],e.forEach(t=>{let i="~".repeat(r)+t+"~";for(let a=1;a<=t.length;a++){const n=i.slice(a,a+this.order),o=i[a+this.order];this.lookupTable[n]||(this.lookupTable[n]={}),this.lookupTable[n][o]?this.lookupTable[n][o]++:this.lookupTable[n][o]=1,a===1&&this.startingFragments.push(n)}})}choose(e){const r=Math.floor(Math.random()*e.length);return e[r]}makeWeightedArray(e,r){let t="";return Object.keys(e).forEach(a=>{t=t+a.repeat(e[a]+r)}),t.split("")}generateName(e){let r=this.choose(this.startingFragments),t=r;for(;;){const i=this.choose(this.makeWeightedArray(this.lookupTable[r],e));if(i==="~")break;t=t+i,r=r.slice(1)+i}return t.slice(this.order-1)}}const k={lastNames:["Everhart","Whitaker","Stark","Blackwood","Davenport","Ashford","Fairchild","Hawthorne","Montgomery","Lancaster","Winters","Beaumont","Rutherford","Kingsley","Wellington","Hartley","Fitzgerald","Pendleton","Ainsworth","Ellington","Holliday","Grantham","Lockhart","Bradshaw","Sinclair","Winslow","Harrington","Middleton","Langston","Huntington","Crawford","Fairfax","Preston","Chandler","Harrison","Aldridge","Templeton","Summers","Fitzpatrick","Waverly","Delaney","Stratford","Hamilton","Dunhill","Pembroke","Wentworth","Aethonwy","Blackwood","Brindlemark","Cairnshadow","Darkfire","Darksong","Dawnrunner","Earthhaven","Emberfell","Evernight","Fablewood","Fellstrike","Fenrisson","Fireraven","Frostbite","Galeforce","Glimmerglow","Goblinshield","Goldenleaf","Grimclaw","Havensong","Hawkwind","Hollowstone","Ironfist","Jaguarclaw","Journeyend","Keeneye","Larkspur","Lavendermist","Lionheart","Moonwhisper","Nightwalker","Northstar","Oceanbreeze","Onyxshadow","Pebblebrook","Phoenixfire","Ravenwood","Redblade","Ridgewalker","Riverwind","Runekeeper","Sandstorm","Sapphirewing","Shadowglow","Silkstrand","Silvermist","Skydancer","Snowflake","Sparrowhawk","Starlight","Steelforge","Stormbringer","Sundancer","Sunshadow","Talonclaw","Tigerlily","Trickster","Valkyrie","Violetmist","Warriorborn","Wavecrest","Whisperwind","Wildflower","Windrunner","Winterfell","Wolfhaven","Wyvernwing","Xylara","Yewshield","Zephyrine","Asterion","Briarrose","Carnelian","Duskhaven","Eldrida","Frosthaven","Gwyneth","Hawthorne","Ivoryspire","Jaspera","Kestrel","Luminaria","Maren","Niamon","Opheliana","Paxton","Quinby","Reynolds","Sagebrush","Torrance","Umbra","Vespera","Waverley","Xanthe","Yorick","Zarael"],firstNames:["Alexander","Oliver","Elijah","William","James","Benjamin","Logan","Gabriel","Michael","Daniel","Anthony","Christopher","Joshua","Andrew","Matthew","Joseph","Samuel","Nicholas","Tyler","Brandon","Ryan","Eric","Kevin","Steven","Brian","Timothy","Justin","Edward","Austin","Christian","Robert","Charles","Thomas","Ronald","Richard","Donald","Frank","George","Harold","Gary","Larry","Jerry","Gerald","Keith","Roger","Arthur","Raymond","Francis","Gregory","Mark","Russell","Vincent","Philip","Stanley","Leonard","Ralph","Eugene","Carl","Paul","Clarence","Cecil","Duane","Lloyd","Dennis","Glenn","Randy","Terry","Dale","Wayne","Jeffrey","Leroy","Marvin","Melvin","Norman","Herman","Milton","Earl","Walter","Vernon","Bobby","Bruce","Billy","Dwight","Floyd","Alfred","Leslie","Weldon","Gordon","Roy","Ivan","Jesus","Troy","Curtis","Gilbert","Leland","Maurice","Orville","Wilbur","Warren","Ernest","Everett","Claude","Clifford","Sidney","Harrison","Victor","Elmer","Emmett","Bernard","Marshall","Stuart","Hubert","Sylvester","Roderick","Dominic","Frederick","Todd","Barry","Virgil","Craig","Alan","Dean","Joel","Kirk","Louis","Norm","Perry","Spencer","Wesley","Olivia","Emma","Ava","Sophia","Mia","Isabella","Charlotte","Amelia","Harper","Evelyn","Abigail","Emily","Lily","Madison","Victoria","Jessica","Samantha","Avery","Riley","Zoe","Chloe","Hannah","Julia","Grace","Sadie","Piper","Mackenzie","Georgia","Aubrey","Scarlett","Taylor","Kayla","Hailey","Alexis","Jasmine","Gianna","Catherine","Elizabeth","Lila","Natalie","Leah","Faith","Ruby","Savannah","Reese","Rowan","Cecilia","Allison","Sylvie","Daphne","Ivy","Tessa","Quinn","Remi","Indigo","Willow","Ophelia","Marley","Cleo","Vivian","Peyton","Sasha","Luna","Aria","Penelope","Maeve","Wren","Lydia","Adeline","Josephine","Eleanor","Cora","Alice","Rachel","Nicole","Brielle","Lauren","Diana","Rebecca","Stella","Margaret","Nina","Paige","Gwen","Faye","Doris","Hazel","Irene","Mabel","Elsie","Vera","Gladys","Ruth","Beatrice","Esther","Josephina","Marilyn","Carmen","Lola","Violet","Heather","Danielle","Yvonne","Anita","Gina","Rosa","Lorraine","Marcia","Jacqueline","Tanya","Melissa","Shirley","Deborah","Helen","Carolyn","Kristen","Pamela","Katherine","Diane","Joan","Evelynne","Leslie","Kathryn","Gwendolyn","Judith","Christine","Sheila","Erin","Dawn","Linda","Gail","Sharon","Denise","Colleen","Donna","Marie","Paula","Annette","Judy","Carol","Sandra","Patricia","Brenda","Lori","Rhonda","Cindy","Lisa","Teresa","Debra","Michelle","Robyn","Laura","Andrea","Susan","Kathy","Theresa","Dorothy","Gloria","Eileen","Connie","Francine","Rita","Darlene","Charlene","Loretta","Marilynne","Shelly","Tracy","Stacie","Tonya","Wanda","Velma","Becky","Belinda","Patsy","Lola","Mattie","Nadine","Leona","Janelle","Elaine","Karin","Sherri","Roxanne","Cassandra","Tiffany","Cindy","Lynn","Tanisha","Margo","Mona","Naomi","Latoya","Althea","Renee","Yvette","Leticia","Kristina","Roxie","Shawna","Elisa","Carmela","Tanya","Lourdes","Yolanda","Alma","Greta","Diana","Luz","Sonia","Erika","Latasha","Malinda","Tonia","Mireya","Lidia","Aida","Ester","Nelda","Minerva","Elvira","Amada","Socorro","Rosie","Loraine","Jerri","Kelli","Loriann","Jenifer","Kymberly","Latonia","Shanta","Kisha","Lashonda","Leigh","Lakisha","Chasity","Tawnya","Shari","Katrice","Lavonne","Alissa","Tammer"]},M=new b(k.firstNames,3),W=new b(k.lastNames,3),D=M.generateName(0)+" "+W.generateName(0),N=new P,s=N.buildNpc(),x=s.Family.Siblings.length>0;let S=document.getElementById("app");class B{buildElement(e){const r=document.createElement(e.element);r.id=e.id;for(let t in e.properties)r[e.properties[t].key]=e.properties[t].value;for(let t in e.children)r.appendChild(this.buildElement(e.children[t]));return r}}const v={element:"div",id:"npc",properties:[],children:[{element:"h1",id:"name",properties:[{key:"innerText",value:D}],children:[]},{element:"p",id:"age",properties:[{key:"innerText",value:"age: "+s.Character.Age}],children:[]},{element:"p",id:"npc_class",properties:[{key:"innerText",value:"class: "+s.Character.Class}],children:[]},{element:"div",id:"family",properties:[],children:[{element:"h3",id:"family_title",properties:[{key:"innerText",value:"Family"}],children:[]},{element:"div",id:"father",properties:[],children:[{element:"h4",id:"father_label",properties:[{key:"innerText",value:"Father"}],children:[]},{element:"p",id:"father_class",properties:[{key:"innerText",value:"Class: "+s.Family.Parents[0].Class}],children:[]},{element:"p",id:"father_status",properties:[{key:"innerText",value:"Status: "+s.Family.Parents[0].Living}],children:[]}]},{element:"div",id:"mother",properties:[],children:[{element:"h4",id:"mother_label",properties:[{key:"innerText",value:"Mother"}],children:[]},{element:"p",id:"mother_class",properties:[{key:"innerText",value:"Class: "+s.Family.Parents[1].Class}],children:[]},{element:"p",id:"mother_status",properties:[{key:"innerText",value:"Status: "+s.Family.Parents[1].Living}],children:[]}]}]},{element:"div",id:"enneagram",properties:[],children:[]}]};if(x)for(let l in s.Family.Siblings){const e={element:"div",id:"sibling_"+l,properties:[],children:[{element:"h4",id:"sibling_"+l+"title",properties:[{key:"innerText",value:s.Family.Siblings[l].Age+" "+s.Family.Siblings[l].Gender}],children:[]},{element:"p",id:"sibling_"+l+"class",properties:[{key:"innerText",value:"Class: "+s.Family.Siblings[l].Class}],children:[]},{element:"p",id:"sibling_"+l+"class",properties:[{key:"innerText",value:"Status: "+s.Family.Siblings[l].Living}],children:[]}]};v.children[3].children.push(e)}for(let l in s.Character.Types){const e={element:"div",id:"type_"+s.Character.Types[l],properties:[],children:[{element:"h4",id:"type_"+s.Character.Types[l]+"_title",properties:[{key:"innerText",value:"Type "+s.Character.Types[l]}],children:[]},{element:"p",id:"type_"+s.Character.Types[l]+"_description",properties:[{key:"innerText",value:s.Character.TypeDescriptions[l]}],children:[]}]};v.children[4].children.push(e)}const _=new B,H=_.buildElement(v);S.appendChild(H);F(S);
